<div class="card text-center">
    <div class="card-header">
        <ul class="nav nav-tabs card-header-tabs">
            <li class="nav-item">
                <a id="tab1" class="nav-link active" href="#list">Ürün Listele</a>
            </li>
            <li class="nav-item">
                <a id="tab2" class="nav-link" href="#add">Ürün Ekle</a>
            </li>
        </ul>
    </div>
    <div class="card-body" id="list">
        <p class="card-text">
            @foreach (var product in Model.Products)
            {
                <div class="pb-4" style="border-bottom: 1px dashed #164B60;border-top: 1px dashed #164B60;flex-wrap: wrap">
                    <div class="container d-flex justify-content-between align-items-center p-3 fs-5">
                        <div class="d-flex justify-content-center align-items-center">
                            <div><img style="width:75px;height:75px;object-fit:cover" src="@product.Photo" class="rounded float-left" alt="..."></div>
                            <div class="mx-3">@product.Name</div>
                        </div>
                        <div>
                            <span style="font-size: 16px">@product.Amount Adet/Kilo</span><br />
                        </div>
                    </div>
                    <div style="cursor:pointer" asp-action="RemoveProduct" asp-controller="Home" asp-route-productId="@product.Id" class="d-flex justify-content-between px-3 align-items-center">
                        <span style="font-size:15px; font-weight:bold;" class=@((DateTime.Parse(product.SKTDate) - DateTime.Now).TotalDays < 1 ? "text-danger" : "text-success")>Kalan Gün: @((DateTime.Parse(product.SKTDate) - DateTime.Now).TotalDays < 1 ? "1 günden az" : Math.Round((DateTime.Parse(product.SKTDate) - DateTime.Now).TotalDays, 1, MidpointRounding.AwayFromZero).ToString("0.0"))</span>
                        <a class="btn btn-sm btn-outline-danger" asp-action="RemoveProduct" asp-controller="Home" asp-route-productId="@product.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" fill="#B70404" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z" />
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z" />
                            </svg>
                        </a>
                    </div>
                </div>
            }
        </p>
    </div>
    <div class="card-body" id="add" style="display: none;">
        <form id="productForm" method="post" asp-action="Save">
            <div class="card-text">
                <p class="text-danger fw-bold w-100 m-2" style="text-align:left;font-size:12px;">Ürün Adı*</p><input id="urunAdi" name="Name" class="m-2 form-control form-control-lg" type="text" placeholder="Ürün Adı">
                <p class="text-danger fw-bold w-100 m-2" style="text-align:left;font-size:12px;">Ürün Resim Linki*</p><input id="urunResim" name="Photo" class="m-2 form-control form-control-lg" type="text" placeholder="Ürün Resim Linki">
                <p class="text-danger fw-bold w-100 m-2" style="text-align:left;font-size:12px;">Ürün Miktarı*</p><input id="urunMiktari" name="Amount" class="m-2 form-control form-control-lg" type="number" placeholder="Ürün Miktarı">
                <p class="text-danger fw-bold w-100 m-2" style="text-align:left;font-size:12px;">Son Kullanma Tarihi*</p><input id="sonKullanmaTarihi" name="SKTDate" class="m-2 form-control form-control-lg" type="date" placeholder="Ürün Son Kullanma Tarihi">
                <input id="kaydetBtn" class="m-2 form-control form-control-lg btn btn-outline-primary" type="submit" value="Kaydet" disabled>
            </div>
        </form>
    </div>
</div>

<script>
    const tab1Content = document.getElementById('list');
    const tab2Content = document.getElementById('add');
    const tab1A = document.getElementById('tab1');
    const tab2A = document.getElementById('tab2');
    const kaydetBtn = document.getElementById('kaydetBtn');
    const urunAdi = document.getElementById('urunAdi');
    const urunResim = document.getElementById('urunResim');
    const urunMiktari = document.getElementById('urunMiktari');
    const sonKullanmaTarihi = document.getElementById('sonKullanmaTarihi');

    tab1A.addEventListener('click', function (event) {
        tab1Content.style.display = "block";
        tab2Content.style.display = "none";
        tab1A.classList.add('active');
        tab2A.classList.remove('active');
    });

    tab2A.addEventListener('click', function (event) {
        tab2Content.style.display = "block";
        tab1Content.style.display = "none";
        tab2A.classList.add('active');
        tab1A.classList.remove('active');
    });

    function checkInputs() {
        if (urunAdi.value.trim() !== '' && urunResim.value.trim() !== '' && urunMiktari.value.trim() !== '' && sonKullanmaTarihi.value.trim() !== '') {
            kaydetBtn.disabled = false;
        } else {
            kaydetBtn.disabled = true;
        }
    }

    urunAdi.addEventListener('input', checkInputs);
    urunResim.addEventListener('input', checkInputs);
    urunMiktari.addEventListener('input', checkInputs);
    sonKullanmaTarihi.addEventListener('input', checkInputs);

    var sonKullanmaTarihiInput = document.getElementById("sonKullanmaTarihi");

    sonKullanmaTarihiInput.addEventListener("change", function () {
        var selectedDate = new Date(this.value);
        var today = new Date();

        if (selectedDate < today) {
            alert("Lütfen bugünden sonraki bir tarih seçin.");
            this.value = ""; // Tarihi sıfırlayarak seçimi iptal edebilirsiniz.
        }
    });
</script>
<script>
    // Tarayıcı bildirimine izin isteme
    if ('Notification' in window) {
        Notification.requestPermission().then(function (permission) {
            if (permission === 'granted') {
                // Kullanıcı izin verdiğinde abonelik oluşturma
                if ('serviceWorker' in navigator) {
                    navigator.serviceWorker.register('service-worker.js').then(function (registration) {
                        registration.pushManager.subscribe({
                            userVisibleOnly: true,
                            applicationServerKey: 'your_application_server_key'
                        }).then(function (subscription) {
                            // Abonelik başarılı bir şekilde oluşturuldu
                            console.log('Abonelik başarılı:', subscription.endpoint);
                        }).catch(function (error) {
                            // Abonelik oluşturulamadı
                            console.error('Abonelik oluşturulamadı:', error);
                        });
                    });
                }
            }
        });
    }

    // Bildirim gönderme
    function sendNotification(title, options) {
        if ('Notification' in window && Notification.permission === 'granted') {
            navigator.serviceWorker.ready.then(function (registration) {
                registration.showNotification(title, options);
            });
        }
    }

    // Kullanım örneği
    sendNotification('Başlık', {
        body: 'Bildirim içeriği',
        icon: 'path_to_icon',
        // diğer seçenekler
    });

</script>